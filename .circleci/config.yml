defaults: &defaults
  working_directory: ~/robi

version: 2
jobs:
  checkout:
    <<: *defaults
    docker:
      - image: circleci/elixir:1.7.3
    steps:
      - checkout
      - save_cache:
          key: v1-robi-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/robi
      - run: mkdir manifests
      - run: touch manifests/versions.txt
      - run:
          name: Update Manifests
          command: echo -e "$(date +%y%-m%-d.%-k.%-M)\n$(cat manifests/versions.txt)" > manifests/versions.txt
      - persist_to_workspace:
          root: manifests
          paths:
            - versions.txt

  mix_deps_get_and_test:
    <<: *defaults
    docker:
      - image: circleci/elixir:1.7.3
    steps:
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          key: v1-robi-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - run: mix deps.get
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths:
            - deps
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths:
            - deps
      - save_cache:
          key: v1-mix-cache
          paths:
            - deps

  prev_release:
    <<: *defaults
    machine:
      enabled: true
    steps:
      - run:
          name: Add remote host fingerprint
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      - attach_workspace:
          at: manifests
      - run:
          name: Fetch current running versions
          command: |
            scp $SSH_USER@$SSH_HOST:/home/stephane/domains/robi.stephanerobino.com/manifests/versions.txt manifests/current_versions.txt
      - persist_to_workspace:
          root: manifests
          paths:
            - current_versions.txt
      - run:
          name: Fetch old build
          command: |
            scp $SSH_USER@$SSH_HOST:/home/stephane/domains/robi.stephanerobino.com/prod.tar.gz .
            tar -zxvf prod.tar.gz
      - persist_to_workspace:
          root: _build/prod
          paths:
            - rel/*
            - lib/*

  build:
    <<: *defaults
    docker:
      - image: circleci/elixir:1.7.3
    steps:
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          key: v1-robi-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - attach_workspace:
          at: manifests
      - attach_workspace:
          at: _build/prod
      - run:
          name: Create release
          command: |
            export APP_VERSION=$(head -1 manifests/versions.txt)
            MIX_ENV=prod mix release
      - persist_to_workspace:
          root: _build/prod
          paths:
            - rel/*
            - lib/*

  hot-build:
    <<: *defaults
    docker:
      - image: circleci/elixir:1.7.3
    steps:
      - run:
          name: install hex & rebar
          command: mix do local.hex --force, local.rebar --force
      - restore_cache:
          key: v1-robi-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - attach_workspace:
          at: manifests
      - attach_workspace:
          at: _build/prod
      - run:
          name: Create release
          command: |
            export APP_VERSION=$(head -1 manifests/versions.txt)
            export PREV_APP_VERSION=$(head -1 manifests/current_versions.txt)
            MIX_ENV=prod mix release --upgrade --upfrom=$PREV_APP_VERSION
      - persist_to_workspace:
          root: _build/prod
          paths:
            - rel/*
            - lib/*

  deploy:
    <<: *defaults
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: manifests
      - attach_workspace:
          at: _build/prod
      - run:
          name: Add remote host fingerprint
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      - run:
          name: Deploy Over SSH
          command: |
            export APP_VERSION=$(head -1 manifests/versions.txt)
            scp _build/prod/rel/robi/releases/$APP_VERSION/robi.tar.gz $SSH_USER@$SSH_HOST:/home/stephane/domains/robi.stephanerobino.com/public_html
            ssh $SSH_USER@$SSH_HOST "cd /home/stephane/domains/robi.stephanerobino.com/public_html && tar -zxvf robi.tar.gz"
            ssh $SSH_USER@$SSH_HOST "/home/stephane/domains/robi.stephanerobino.com/public_html/bin/robi stop || true"
            ssh $SSH_USER@$SSH_HOST "/home/stephane/domains/robi.stephanerobino.com/public_html/bin/robi start"
      - run:
          name: persist build and version
          command: |
            tar -zcvf prod.tar.gz _build/prod
            scp prod.tar.gz $SSH_USER@$SSH_HOST:/home/stephane/domains/robi.stephanerobino.com/prod.tar.gz
            scp manifests/versions.txt $SSH_USER@$SSH_HOST:/home/stephane/domains/robi.stephanerobino.com/manifests

  hot-deploy:
    <<: *defaults
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: manifests
      - attach_workspace:
          at: _build/prod
      - run:
          name: Add remote host fingerprint
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      - run:
          name: Deploy Over SSH
          command: |
            export APP_VERSION=$(head -1 manifests/versions.txt)
            ssh $SSH_USER@$SSH_HOST "mkdir -p /home/stephane/domains/robi.stephanerobino.com/public_html/releases/$APP_VERSION"
            scp _build/prod/rel/robi/releases/$APP_VERSION/robi.tar.gz $SSH_USER@$SSH_HOST:/home/stephane/domains/robi.stephanerobino.com/public_html/releases/$APP_VERSION
            ssh $SSH_USER@$SSH_HOST "/home/stephane/domains/robi.stephanerobino.com/public_html/bin/robi upgrade $APP_VERSION"
      - run:
          name: persist build and version
          command: |
            tar -zcvf prod.tar.gz _build/prod
            scp prod.tar.gz $SSH_USER@$SSH_HOST:/home/stephane/domains/robi.stephanerobino.com/prod.tar.gz
            scp manifests/versions.txt $SSH_USER@$SSH_HOST:/home/stephane/domains/robi.stephanerobino.com/manifests

workflows:
  version: 2
  btd:
    jobs:
      - checkout
      - mix_deps_get_and_test:
          requires:
            - checkout
      - prev_release:
          requires:
            - mix_deps_get_and_test
          filters:
            branches:
              only:
                - hot-master
      - build:
          requires:
            - mix_deps_get_and_test
          filters:
            branches:
              only:
                - master
      - hot-build:
          requires:
            - prev_release
          filters:
            branches:
              only:
                - hot-master
      - deploy-approval:
          requires:
            - build
          type: approval
          filters:
            branches:
              only:
                - master
      - hot-deploy-approval:
          requires:
            - hot-build
          type: approval
          filters:
            branches:
              only:
                - hot-master
      - deploy:
          requires:
            - deploy-approval
          filters:
            branches:
              only:
                - master
      - hot-deploy:
          requires:
            - hot-deploy-approval
          filters:
            branches:
              only:
                - hot-master
